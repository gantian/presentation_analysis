clear;
currentPath = pwd;

for iSessionID = 1:10
    cd(currentPath);
    %% Configuration
    addpath('../');
    para = config_Para(iSessionID);
    paraIdx = load(sprintf('%s/sessionSpeaker2PId',para.AnnotPath));
    FFMpegPath = para.FFMpegPath;
    commonPath = sprintf('%s/data',para.commonPath);
    saveCommonPath = sprintf('%s',para.DemoPath);
    currentPath = pwd;
    
    opt.addAudio = para.addAudio;
    opt.KinectReady = para.KinectReady;
    
    %% ffmpeg processing
    cd(FFMpegPath);
    
    frameRateI = 25;
    frameRateO = 25;
    
    folderName = para.cams;
    
    timing = load(sprintf('%s/../timing.txt',commonPath));
    noSpeaker = size(timing,1);
    
    
    
    if opt.KinectReady
        KinectFolderName = '6_Kinect';
    else
        KinectFolderName = folderName{2};
    end
    
    tic;
    
    for iNoSpeaker = 1:noSpeaker %:noSpeaker
        
        pID = paraIdx.sessionSpeaker2PId(iSessionID,iNoSpeaker);
%       
        fileName = sprintf('%s/new_demo_%d.mp4',saveCommonPath,pID);
        if exist(fileName,'file')
            continue;        
        end
%         if (pID<13 || pID==20||pID==25||pID==30||pID==41||pID==42||pID==44||pID==49)
%             continue;
%         end
        startFrame = (timing(iNoSpeaker,1)*60+timing(iNoSpeaker,2))*frameRateI;
        
        %endFrame = startFrame+60*2*25;
        endFrame = (timing(iNoSpeaker,3)*60+timing(iNoSpeaker,4))*frameRateI;
        
        speakerID = timing(iNoSpeaker,5);audience1ID = 4;audience2ID = 5;
        if speakerID==4
            audience1ID = 3;
        elseif speakerID==5
            audience2ID = 3;
        end
        
        offset = 0;
        f_s = startFrame;        
        f_e = endFrame;
        duration = floor((f_e-f_s+1)/25);
        
        if opt.addAudio
            audio_Idx = timing(iNoSpeaker,5);
            %cams = {'2_GoPro','3_Grey','4_Red','5_White'};
            aRT = 48000;
            a_s = f_s/frameRateI*aRT;
            a_e = (f_e+1)/frameRateI*aRT-1;
            audioName = sprintf('%s/audio_trim_%d.mp4',commonPath,iNoSpeaker);
            if ~exist(audioName,'file')
                if opt.addAudio
                    audioData = load(sprintf('%s/data_audio.mat',commonPath));
                end
                audiowrite(strcat(commonPath,'/audio_trim.mp4'),audioData.audio_all(a_s:a_e,audio_Idx),aRT);
            end
            audioOpt1 = sprintf(' -i %s/audio_trim_%d.mp4',commonPath,iNoSpeaker);
            audioOpt2 = sprintf(' -c:a copy -shortest');
        else
            audioOpt1 = '';
            audioOpt2 = '';
        end
        
        frameRateResult = 1;
        commandStr =strcat(sprintf('ffmpeg'),...
            ...% Web Camera
            sprintf(' -r %d',frameRateI),...
            sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i %s/%s/cam_%s_%%06d.jpg',commonPath,folderName{1},folderName{1}(1)),...
            ...% GoPro Camera
            sprintf(' -r %d',frameRateI),...
            sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i %s/%s/cam_%s_%%06d.jpg',commonPath,folderName{2},folderName{2}(1)),...
            ...% Speaker
            sprintf(' -r %d',frameRateI),...
            sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i %s/%s/cam_%s_%%06d.jpg',commonPath,folderName{speakerID},folderName{speakerID}(1)),...
            ...
            sprintf(' -r %d',frameRateI),...
            sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i %s/%s/cam_%s_%%06d.jpg',commonPath,folderName{audience1ID},folderName{audience1ID}(1)),...
            ...
            sprintf(' -r %d',frameRateI),...
            sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i %s/%s/cam_%s_%%06d.jpg',commonPath,folderName{audience2ID},folderName{audience2ID}(1)),...
            ...% Kinect Sensor
            sprintf(' -r %d',frameRateI),...
            sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i %s/%s/cam_%s_%%06d.jpg',commonPath,KinectFolderName,KinectFolderName(1)),...
            ...
            sprintf(' -r %d',frameRateResult),...
            sprintf(' -start_number 1'),...
            ...sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i F:/GitHub/projects/MM15/Feedback/Demo/S%02d_value_%%02d.png',pID),...
            ...
            sprintf(' -r %d',frameRateResult),...
            sprintf(' -start_number 1'),...
            ...sprintf(' -start_number %d',startFrame(1)+offset),...
            sprintf(' -i F:/GitHub/projects/MM15/Feedback/Demo/S%02d_pi_%%02d.png',pID),...
            ...
            sprintf('%s',audioOpt1),...
            sprintf(' -filter_complex "nullsrc=size=1920x1440 [base];'),...
            sprintf(' [0:v] scale=640x360 [u_1];'),...
            sprintf(' [1:v] scale=640x360 [u_2];'),...
            sprintf(' [2:v] scale=640x360 [u_3];'),...
            sprintf(' [3:v] scale=640x360 [u_4];'),...
            sprintf(' [4:v] scale=640x360 [u_5];'),...
            sprintf(' [5:v] scale=640x480,hflip [u_6];'),...
            sprintf(' [6:v] scale=960x720 [u_7];'),...
            sprintf(' [7:v] scale=960x720 [u_8];'),...
            ...
            sprintf(' [base][u_1] overlay=shortest=1 [tmp1];'),...
            sprintf(' [tmp1][u_2] overlay=shortest=1:x=640 [tmp2];'),...
            sprintf(' [tmp2][u_6] overlay=shortest=1:x=1280:y=-100 [tmp3];'),...
            sprintf(' [tmp3][u_3] overlay=shortest=1:x=1:y=360 [tmp4];'),...
            sprintf(' [tmp4][u_4] overlay=shortest=1:x=640:y=360 [tmp5];'),...
            sprintf(' [tmp5][u_5] overlay=shortest=1:x=1280:y=360 [tmp6];'),...
            sprintf(' [tmp6][u_7] overlay=shortest=0:x=960:y=720 [tmp7];'),...
            sprintf(' [tmp7][u_8] overlay=shortest=0:x=1:y=720'),...
            sprintf('"'),...
            sprintf(' -c:v libx264'),...
            sprintf(' %s',audioOpt2),...
            sprintf(' -r %d -t %d',frameRateO,duration),...
            sprintf(' %s/new_demo_%d.mp4',saveCommonPath,pID));
        dos(commandStr);
        
        cd(currentPath);
    end
end
